name: Release

# This workflow automatically generates changelogs from conventional commits
# and creates GitHub releases when triggered by PR labels or manual dispatch

on:
  pull_request:
    types:
      - labeled
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Create and Publish Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.head_ref || github.ref}}
          fetch-depth: 0
          token: ${{secrets.GITHUB_TOKEN}}
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://npm.pkg.github.com"
      - name: Setup Git context
        run: |
          git config --local user.name "Prasheel's BOT"
          git config --local user.email "prasheelsoni11@gmail.com"
          git config --local url."https://${{secrets.GITHUB_TOKEN}}@github.com/".insteadOf "https://github.com/"
      - name: Checkout main branch
        run: |
          git fetch
          git checkout main
      - name: "Install dependencies"
        run: npm install --frozen-lockfile
      - name: "Set environment variables"
        run: |
          echo "BASE_URL=https://portfolio-backend-x1gd.onrender.com" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BASE_URL=https://portfolio-backend-x1gd.onrender.com" >> $GITHUB_ENV
      - name: "Build project"
        run: npm run build
      - name: "Check build output"
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
          echo "Build successful: .next directory created"
      - name: "Create release branch"
        run: |
          git checkout -b release/temp
      - name: "Merge feature branch"
        if: github.event_name == 'pull_request'
        run: |
          git merge --no-ff ${{github.head_ref}}
      - name: "Generate changelog and bump version"
        id: "version"
        run: |
          # Generate changelog and bump version using standard-version (skip auto-commit)
          npx standard-version --no-verify --skip.commit
          # Extract the new version from package.json
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          # Show the generated changelog for this release
          echo "=== Generated Changelog ==="
          head -20 CHANGELOG.md
          echo "=========================="
      - name: "Commit version and changelog changes"
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): v${{steps.version.outputs.version}}"
      - name: "Rename release branch"
        run: |
          git branch -m release/v${{steps.version.outputs.version}}
      - name: "Push changes to origin"
        run: git push origin +release/v${{steps.version.outputs.version}}:release/v${{steps.version.outputs.version}}

  merge-release:
    runs-on: ubuntu-latest
    name: Merge release v${{needs.release.outputs.version}}
    needs: [release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release/v${{needs.release.outputs.version}}
          token: ${{secrets.GITHUB_TOKEN}}
      - name: Setup Git context
        run: |
          git config --local user.name "Prasheel's BOT"
          git config --local user.email "prasheelsoni11@gmail.com"
          git config --local url."https://${{secrets.GITHUB_TOKEN}}@github.com/".insteadOf "https://github.com/"
      - name: "Merge"
        run: |
          git fetch
          git checkout main
          git pull origin main
          git merge --no-ff release/v${{needs.release.outputs.version}}
          git push origin main
          git tag -a v${{needs.release.outputs.version}} main -m v${{needs.release.outputs.version}}
          git push origin v${{needs.release.outputs.version}}
      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{needs.release.outputs.version}}
          release_name: Release v${{needs.release.outputs.version}}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  cleanup-on-failure:
    runs-on: ubuntu-latest
    name: Remove label on failure
    if: failure() && github.event_name == 'pull_request'
    needs: [release, merge-release]
    steps:
      - name: Remove trigger label
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            
            // Find the trigger label (you can customize this label name)
            const triggerLabel = labels.find(label => 
              label.name === 'ready-for-release' || 
              label.name === 'release' ||
              label.name === 'deploy'
            );
            
            if (triggerLabel) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                name: triggerLabel.name
              });
              
              console.log(`Removed label: ${triggerLabel.name}`);
            } else {
              console.log('No trigger label found to remove');
            }
